import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { Download } from "lucide-react";

interface AnalysisResultProps {
  isVisible: boolean;
}

export function AnalysisResult({ isVisible }: AnalysisResultProps) {
  if (!isVisible) {
    return null;
  }

  // Mock data for frontend demonstration
  const mockAnalysis = {
    score: 75,
    explanation: "The content shows moderate similarity to existing works. Some sections might need revision.",
    potentialIssues: [
      "Paragraph 2 shows similarity to a published article",
      "The conclusion contains common phrases that might be protected",
    ],
    alternativeVersion: `Here is a completely original version of your text...

This is a placeholder for the AI-generated alternative version that would be copyright compliant.

The actual version will be generated by the backend API.`
  };

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle>Copyright Analysis</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-6">
            <div>
              <div className="flex justify-between mb-2">
                <span>Originality Score</span>
                <span>{mockAnalysis.score}%</span>
              </div>
              <Progress value={mockAnalysis.score} />
            </div>

            <div>
              <h4 className="font-semibold mb-2">Analysis</h4>
              <p className="text-muted-foreground">{mockAnalysis.explanation}</p>
            </div>

            {mockAnalysis.potentialIssues.length > 0 && (
              <div>
                <h4 className="font-semibold mb-2">Potential Issues</h4>
                <ul className="list-disc pl-4 space-y-1">
                  {mockAnalysis.potentialIssues.map((issue, i) => (
                    <li key={i} className="text-muted-foreground">
                      {issue}
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>Alternative Version</CardTitle>
        </CardHeader>
        <CardContent>
          <p className="text-muted-foreground whitespace-pre-wrap">
            {mockAnalysis.alternativeVersion}
          </p>
          <Button
            className="mt-4"
            onClick={() => {
              const blob = new Blob([mockAnalysis.alternativeVersion], { type: "text/plain" });
              const url = URL.createObjectURL(blob);
              const a = document.createElement("a");
              a.href = url;
              a.download = "alternative_version.txt";
              a.click();
              URL.revokeObjectURL(url);
            }}
          >
            <Download className="mr-2 h-4 w-4" />
            Download Alternative Version
          </Button>
        </CardContent>
      </Card>
    </div>
  );
}